#!/bin/bash

. $BASHRC_BASE/bashrc/errors.bash

function usage() {
  echo "Usage: brc-files-createcontainer [-h] [-a BRC_AUTHTOKEN] [-v BRC_VAULTNAME] \\"
  echo "                                 [-r BRC_REGION] -c CONTAINER"
  echo "Example:"
  echo "  # brc-files-createcontainer -a 1a2b3c4d5e6f7g8h9i0j \\"
  echo "                              -v MossoCloudFS_199f2dd2-e293-11e3-87ea-6f46a026e216 \\"
  echo "                              -r dfw \\"
  echo "                              -c images \\"
  echo "Arguments:"
  echo "  -a X	Authentication token.  This can be set via the environment"
  echo "        variable BRC_AUTHTOKEN instead of as an argument."
  echo "  -c X  Name of Cloud Files container."
  echo "  -h	Print this help"
  echo "  -r X  Region.  Examples: iad, dfw, ord, syd.  This can be set via"
  echo "        the environment variable BRC_REGION instead of as an"
  echo "        argument."
  echo "  -v X  Vault name for this account.  This can be set via the environment"
  echo "        variable BRC_VAULTNAME instead of as an argument."
}

USAGEFLAG=0
while getopts ":a:c:hr:v:" arg; do
  case $arg in
    a) BRC_AUTHTOKEN=$OPTARG;;
    c) CONTAINER=$OPTARG;;
    h) usage && exit 0;;
    r) BRC_REGION=$OPTARG;;
    v) BRC_VAULTNAME=$OPTARG;;
    :) echo "ERROR: Option -$OPTARG requires an argument."
       USAGEFLAG=1;;
    *) echo "ERROR: Invalid option: -$OPTARG"
       USAGEFLAG=1;;
  esac
done #End arguments
shift $(($OPTIND - 1))

for ARG in BRC_AUTHTOKEN BRC_REGION BRC_VAULTNAME; do
  if [ -z "${!ARG}" ]; then
    echo "ERROR: Must define ${!ARG} in environment or argument"
    USAGEFLAG=1
  fi
done
for ARG in CONTAINER; do
  if [ -z "${!ARG}" ]; then
    echo "ERROR: Must define ${!ARG} as argument"
    USAGEFLAG=1
  fi
done
if [ $USAGEFLAG -ne 0 ]; then
  usage && exit 1
fi

FILES_ENDPOINT=$( $BRCUTIL/brc-util-filesendpoint -r $BRC_REGION )
#CDN_ENDPOINT=$( $BRCUTIL/brc-util-cdnendpoint -r $BRC_REGION )

#
# Make the call
DATA=$(curl --write-out \\n%{http_code} --silent --output - \
            "$FILES_ENDPOINT/$BRC_VAULTNAME/$CONTAINER" \
            -X PUT \
            -H "X-Auth-Token: $BRC_AUTHTOKEN" \
         2>/dev/null )
RETVAL=$?
CODE=$( echo "$DATA" | tail -n 1 )

# Check for failed API call
if [ $RETVAL -ne 0 ]; then
  errorcurlfail
elif [[ $(echo "$CODE" | grep -cE '^2..$') -eq 0 ]]; then
  errornot200 $CODE $( echo "$DATA" | head -n -1 )
fi

echo "Response code: $CODE"

exit 0
