#!/bin/bash

. $BASHRC_BASE/bashrc/errors.bash

function usage() {
  echo "Usage: brc-files-settempurlkey [-h] [-a BRC_AUTHTOKEN] [-v BRC_VAULTNAME] \\"
  echo "                               [-r BRC_REGION] -k TEMPURL_KEY"
  echo "Example:"
  echo "  # brc-files-settempurlkey -a 1a2b3c4d5e6f7g8h9i0j \\"
  echo "                            -v MossoCloudFS_199f2dd2-e293-11e3-87ea-6f46a026e216 \\"
  echo "                            -r DFW \\"
  echo "                            -k P@ssw0rd"
  echo "Arguments:"
  echo "  -a X	Authentication token.  This can be set via the environment"
  echo "        variable BRC_AUTHTOKEN instead of as an argument."
  echo "  -k X  New tempURL key."
  echo "  -h	Print this help"
  echo "  -r X  Region.  Examples: iad, dfw, ord, syd.  This can be set via"
  echo "        the environment variable BRC_REGION instead of as an"
  echo "        argument."
  echo "  -v X  Vault name for this account.  This can be set via the environment"
  echo "        variable BRC_VAULTNAME instead of as an argument."
}

SNET=0
TEMPKEY=""
USAGEFLAG=0
while getopts ":a:hk:r:v:" arg; do
  case $arg in
    a) BRC_AUTHTOKEN=$OPTARG;;
    h) usage && exit 0;;
    k) TEMPKEY="$OPTARG";;
    r) BRC_REGION="$OPTARG";;
    v) BRC_VAULTNAME=$OPTARG;;
    :) echo "ERROR: Option -$OPTARG requires an argument."
       USAGEFLAG=1;;
    *) echo "ERROR: Invalid option: -$OPTARG"
       USAGEFLAG=1;;
  esac
done #End arguments
shift $(($OPTIND - 1))

for ARG in BRC_AUTHTOKEN BRC_REGION BRC_VAULTNAME; do
  if [ -z "${!ARG}" ]; then
    echo "ERROR: Must define $ARG in environment or argument"
    USAGEFLAG=1
  fi
done
for ARG in TEMPKEY; do
  if [ -z "${!ARG}" ]; then
    echo "ERROR: Must define $ARG as argument"
    USAGEFLAG=1
  fi
done
if [ $USAGEFLAG -ne 0 ]; then
  usage && exit 1
fi


BRC_REGION=$( echo $BRC_REGION | tr 'A-Z' 'a-z' )
FILES_ENDPOINT=$( $BRCUTIL/brc-util-filesendpoint -r $BRC_REGION )


#
# Make the call
# If you use a ServiceNet endpoint here, all TempURLs generated with the
#   key will only be accessible via ServiceNet
DATA=$( curl -I --write-out \\n%{http_code} --silent --output - \
             $FILES_ENDPOINT/$BRC_VAULTNAME \
             -X POST \
             -H "X-Auth-Token: $BRC_AUTHTOKEN" \
             -H "X-Account-Meta-Temp-Url-Key: $TEMPKEY" \
          2>/dev/null )
RETVAL=$?
CODE=$( echo "$DATA" | tail -n 1 )

# Check for failed API call
if [ $RETVAL -ne 0 ]; then
  errorcurlfail
elif [[ $(echo "$CODE" | grep -cE '^2..$') -eq 0 ]]; then
  errornot200 $CODE $( echo "$DATA" | head -n -1 )
fi

echo "Response code: $CODE"
echo "Updated TempURL key for region $BRC_REGION."

exit 0


