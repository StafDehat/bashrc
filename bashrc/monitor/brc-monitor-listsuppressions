#!/bin/bash

. $BASHRC_BASE/bashrc/errors.bash

function usage() {
  echo "Usage: brc-monitor-listsuppressions [-h] [-a BRC_AUTHTOKEN] [-t BRC_TENANTID]"
  echo "Example:"
  echo "  # brc-monitor-listsuppressions -a 1a2b3c4d5e6f7g8h9i0j \\"
  echo "                                 -t 123456"
  echo "Arguments:"
  echo "  -a X	Authentication token.  This can be set via the environment"
  echo "        variable BRC_AUTHTOKEN instead of as an argument."
  echo "  -h	Print this help"
  echo "  -t X	Tenant ID (DDI).  This can be set via the environment"
  echo "        variable BRC_TENANTID instead of as an argument."
}

USAGEFLAG=0
while getopts ":ha:t:" arg; do
  case $arg in
    a) BRC_AUTHTOKEN=$OPTARG;;
    t) BRC_TENANTID=$OPTARG;;
    h) usage && exit 0;;
    :) echo "ERROR: Option -$OPTARG requires an argument."
       USAGEFLAG=1;;
    *) echo "ERROR: Invalid option: -$OPTARG"
       USAGEFLAG=1;;
  esac
done #End arguments
shift $(($OPTIND - 1))

if [ -z "$BRC_AUTHTOKEN" ]; then
  echo "ERROR: Must define BRC_AUTHTOKEN in environment or argument"
  USAGEFLAG=1
fi
if [ -z "$BRC_TENANTID" ]; then
  echo "ERROR: Must define BRC_TENANTID in environment or argument"
  USAGEFLAG=1
fi

if [ $USAGEFLAG -ne 0 ]; then
  usage && exit 1
fi

DATA=$( curl --write-out \\n%{http_code} --silent --output - \
             $MONITOR_ENDPOINT/$BRC_TENANTID/suppressions \
             -X GET \
             -H "Content-Type: application/json" \
             -H "X-Auth-Token: $BRC_AUTHTOKEN"
          2>/dev/null )
RETVAL=$?
CODE=$( echo "$DATA" | tail -n 1 )

# Check for failed API call
if [ $RETVAL -ne 0 ]; then
  errorcurlfail
elif [[ $(echo "$CODE" | grep -cE '^2..$') -eq 0 ]]; then
  errornot200 $CODE $( echo "$DATA" | head -n -1 )
fi

DATA=$( echo "$DATA" | head -n -1 | $BRCUTIL/brc-util-json.tool )

echo "$DATA"
exit 0
